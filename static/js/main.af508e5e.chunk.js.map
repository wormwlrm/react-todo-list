{"version":3,"sources":["logo.svg","layout/Header.js","components/ToDoForm.js","components/ToDoItem.js","components/ToDoList.js","layout/Content.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","Navbar","bg","variant","Brand","src","logo","width","height","className","Collapse","Text","href","target","Component","ToDoForm","_this$props","this","props","onChange","onHitEnter","onCreate","input","console","log","InputGroup","size","FormControl","placeholder","aria-label","value","onKeyPress","Append","Button","onClick","defaultProps","error","ToDoItem","onToggle","onDelete","todo","ListGroup","Item","concat","checked","e","id","ToDoList","state","todos","_this","setState","_this$state","key","filter","map","_this$state2","Card","Body","src_components_ToDoForm","src_components_ToDoItem","Content","Container","Row","Col","xs","sm","span","offset","src_components_ToDoList","App","layout_Header","src_layout_Content","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af508e5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport logo from '../logo.svg';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand>\r\n            <img\r\n              src={logo}\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n            />\r\n            Todo List\r\n          </Navbar.Brand>\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Navbar.Text>\r\n              Made By <a href=\"https://wormwlrm.github.io\" target=\"_blank\">wormwlrm</a>\r\n            </Navbar.Text>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport { InputGroup, Button, FormControl } from 'react-bootstrap';\r\nimport './ToDoForm.scss';\r\n\r\nclass ToDoForm extends Component {\r\n  static defaultProps = {\r\n    input: '',\r\n    onChange: () => {\r\n      console.error('onChange undefined');\r\n    },\r\n    onCreate: () => {\r\n      console.error('onCreate undefined');\r\n    },\r\n    onHitEnter: () => {\r\n      console.error('onHitEnter undefined');\r\n    }\r\n  }\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   console.log(this.props.input, nextProps.input, this.props.input !== nextProps)\r\n  //   return this.props.input !== nextProps.input;\r\n  // }\r\n\r\n  render() {\r\n    const { onChange, onHitEnter, onCreate, input } = this.props;\r\n    console.log('TODOFORM RENDER');\r\n\r\n    return (\r\n      <InputGroup size=\"lg\" className=\"todo-form\">\r\n        <FormControl\r\n          placeholder=\"Enter something\"\r\n          aria-label=\"Enter something\"\r\n          value={input}\r\n          onChange={onChange}\r\n          onKeyPress={onHitEnter}\r\n        />\r\n        <InputGroup.Append>\r\n          <Button variant=\"outline-secondary\"\r\n          onClick={onCreate}>+</Button>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoForm;\r\n","import React, { Component } from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport './ToDoItem.scss';\r\n\r\nclass ToDoItem extends Component {\r\n  static defaultProps = {\r\n    todo: {\r\n      id: '',\r\n      value: '111',\r\n      checked: false\r\n    },\r\n    onToggle: () => {\r\n      console.error('onToggle undefined');\r\n    },\r\n    onDelete: () => {\r\n      console.error('onDelete undefined');\r\n    }\r\n  }\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   console.log('HERE', this.props.todo.checked, nextProps.todo.checked);\r\n  //   return this.props.todo.checked !== nextProps.todo.checked;\r\n  // }\r\n\r\n  render() {\r\n    console.log('TODOITEM RENDER');\r\n\r\n    const { onToggle, onDelete, todo} = this.props;\r\n    return (\r\n      <ListGroup.Item className={`todo-item ${todo.checked ? 'checked' : ''}`}>\r\n        <div className=\"todo-item-delete-button\" onClick={(e) => {\r\n          onDelete(todo.id);\r\n        }}>âœ–</div>\r\n        <div className=\"todo-item-value\" onClick={(e) => {\r\n          onToggle(todo.id);\r\n        }}>\r\n          { todo.value }\r\n        </div>\r\n      </ListGroup.Item>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React, { Component } from 'react';\r\nimport ToDoForm from './ToDoForm';\r\nimport ToDoItem from './ToDoItem';\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\nimport './ToDoList.scss';\r\n\r\nclass ToDoList extends Component {\r\n  id = 3;\r\n\r\n  state = {\r\n    input: '',\r\n    todos: [\r\n      { id: 0, value: 'Welcome', checked: false },\r\n      { id: 1, value: 'Hello', checked: true },\r\n      { id: 2, value: 'Farewell', checked: false }\r\n    ]\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      input: e.target.value\r\n    })\r\n  };\r\n\r\n  onCreate = () => {\r\n    const { input, todos } = this.state;\r\n    if (!input) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      input: '',\r\n      todos: todos.concat({\r\n        id: this.id++,\r\n        value: input,\r\n        checked: false\r\n      })\r\n    })\r\n  }\r\n\r\n  onHitEnter = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.onCreate();\r\n    }\r\n  }\r\n\r\n  onDelete = (id) => {\r\n    const { todos } = this.state;\r\n    this.setState({\r\n      todos: todos.filter((todo) => {\r\n        return todo.id !== id;\r\n      })\r\n    })\r\n  }\r\n\r\n  onToggle = (id) => {\r\n    const { todos } = this.state;\r\n    this.setState({\r\n      todos: todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.checked = !todo.checked;\r\n        }\r\n        return todo;\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { input, todos } = this.state;\r\n    const { onHitEnter, onCreate, onChange, onDelete, onToggle } = this;\r\n    console.log('TODOLIST RENDER');\r\n\r\n    return (\r\n      <Card className=\"todo-list\">\r\n        <Card.Body>\r\n          <ToDoForm\r\n            input={input}\r\n            onHitEnter={onHitEnter}\r\n            onCreate={onCreate}\r\n            onChange={onChange}>\r\n          </ToDoForm>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              { todos.map((todo) => {\r\n                  return <ToDoItem\r\n                    todo={todo}\r\n                    key={todo.id}\r\n                    onDelete={onDelete}\r\n                    onToggle={onToggle}>\r\n                  </ToDoItem>\r\n                }) }\r\n            </ListGroup>\r\n          </Card>\r\n\r\n          {/* { JSON.stringify(this.state.todos) } */}\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoList;\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport ToDoList from '../components/ToDoList';\r\nimport './Content.scss';\r\n\r\nclass Content extends Component {\r\n  render() {\r\n    return (\r\n      <main className=\"main bg-dark\">\r\n        <Container>\r\n          <Row>\r\n            <Col xs={12} sm={{span: 8, offset: 2}}>\r\n              <ToDoList></ToDoList>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react';\nimport Header from './layout/Header';\nimport Content from './layout/Content';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Header></Header>\n        <Content></Content>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}